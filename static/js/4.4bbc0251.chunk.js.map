{"version":3,"sources":["components/Categories.tsx","assets/img/loadingPizzaCart.svg","components/PizzaBlock.tsx","components/SortPopup.tsx","assets/img/sceletonPizzaCart.svg","pages/Home.tsx"],"names":["Categories","React","memo","filters","useSelector","state","categories","activeItem","activeCategory","dispatch","useDispatch","className","cn","onClick","type","HANDLE_ACTIVE_CATEGORY","payload","map","item","index","PizzaBlock","useState","onload","setOnload","types","activeType","setActiveType","sizes","activeSize","setActiveSize","onLoad","src","loadImg","imageUrl","alt","title","name","includes","size","price","width","height","viewBox","fill","xmlns","d","SortPopup","visiblePopup","setVisiblePopup","sortRef","useRef","sort","activeSort","handleOutsideClick","e","path","current","useEffect","document","body","addEventListener","removeEventListener","ref","prev","find","HANDLE_ACTIVE_SORT","Home","pizzas","items","length","getPizzasThunk","isLoaded","a","b","rating","filterSort","filter","category","filterCategories","id","filterPizzas","Array","sceletonCart"],"mappings":"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","file":"static/js/4.4bbc0251.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport cn from 'classnames'\n\nimport { HANDLE_ACTIVE_CATEGORY } from '../redux/reducers/filtersReducer'\nimport { AppStateType } from '../redux/store'\n\nconst Categories: React.FC = React.memo(() => {\n    const filters = useSelector((state: AppStateType) => state.filters.categories)\n    const activeItem = useSelector((state: AppStateType) => state.filters.activeCategory)\n    const dispatch = useDispatch()\n\n    return (\n        <div className=\"categories\">\n            <ul>\n                <li \n                    className={cn({'active': activeItem === null})}\n                    onClick={() => dispatch({type: HANDLE_ACTIVE_CATEGORY, payload: null})}\n                    >Все</li>\n                {filters.map((item, index) => {\n                    return (\n                        <li \n                            className={cn({'active': activeItem === index + 1})}\n                            onClick={() => dispatch({type: HANDLE_ACTIVE_CATEGORY, payload: index + 1})} \n                            key={item}\n                        >{item}</li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n})\n\nexport default Categories","export default __webpack_public_path__ + \"static/media/loadingPizzaCart.989b4d97.svg\";","import React, { useState } from 'react'\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\nimport cn from 'classnames'\nimport { useSelector } from 'react-redux'\n\nimport { PizzaCardType } from '../types/types'\nimport { AppStateType } from '../redux/store'\n\nimport loadImg from '../assets/img/loadingPizzaCart.svg'\n\ntype PizzaBlockType = {\n    item: PizzaCardType\n}\n\nconst PizzaBlock: React.FC<PizzaBlockType> = ({ item }) => {\n    const [onload, setOnload] = useState(true)\n    const [activeType, setActiveType] = useState(item.types[0])\n    const [activeSize, setActiveSize] = useState(item.sizes[0])\n    const types = useSelector((state: AppStateType) => state.types)\n\n    const handleLoading = () => {\n        setOnload(false)\n    }\n\n    return (\n        <div className=\"pizza-block\">\n            <LazyLoadComponent><img className=\"pizza-block__image\" onLoad={handleLoading} src={!onload ? item.imageUrl : loadImg} alt=\"Pizza\" title={item.name} /></LazyLoadComponent>\n            <h4 className=\"pizza-block__title\">{item.name}</h4>\n            <div className=\"pizza-block__selector\">\n                <ul>\n                    {types.types.map((type, index) => {\n                        return <li \n                            key={index}\n                            onClick={() => setActiveType(index)}\n                            className={cn({\n                                'active': activeType === index,\n                                'disabled': !item.types.includes(index)\n                            })}\n                            >{type}</li>\n                    })}\n                </ul>\n                <ul>\n                    {types.sizes.map((size, index) => {\n                        return <li \n                            key={index}\n                            onClick={() => setActiveSize(size)}\n                            className={cn({\n                                'active': activeSize === size,\n                                'disabled': !item.sizes.includes(size)\n                            })}\n                            >{size} см.</li>\n                    })}\n                </ul>\n            </div>\n            <div className=\"pizza-block__bottom\">\n                <div className=\"pizza-block__price\">от {item.price} ₽</div>\n                <div className=\"button button--outline button--add\">\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\" fill=\"white\" />\n                    </svg>\n                    <span>Добавить</span>\n                    <i>2</i>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PizzaBlock\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport cn from 'classnames'\n\nimport { HANDLE_ACTIVE_SORT } from '../redux/reducers/filtersReducer'\nimport { AppStateType } from '../redux/store'\n\nconst SortPopup: React.FC = React.memo(() => {\n    const [visiblePopup, setVisiblePopup] = useState(false)\n    const sortRef = useRef<HTMLInputElement>(null)\n    const filters = useSelector((state: AppStateType) => state.filters.sort)\n    const activeItem = useSelector((state: AppStateType) => state.filters.activeSort)\n    const dispatch = useDispatch()\n\n    const handleOutsideClick = (e: any): void => {\n        if(!e.path.includes(sortRef.current)) {\n            setVisiblePopup(false)\n        }\n    }\n\n    useEffect(() => {\n        document.body.addEventListener('click', handleOutsideClick)\n        return () => document.body.removeEventListener('click', handleOutsideClick)\n    }, [])\n\n    const toggleVisiblePopup = (): void => {\n        setVisiblePopup(prev => !prev)\n    }\n\n    return (\n        <div className=\"sort\" ref={sortRef}>\n            <div className=\"sort__label\">\n                <svg className={cn({'rotated': visiblePopup})} width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\" fill=\"#2C2C2C\" />\n                </svg>\n                <b>Сортировка по:</b>\n                <span onClick={toggleVisiblePopup}>{filters.find(item => item.type === activeItem && item.name).name}</span>\n            </div>\n            {\n                visiblePopup && \n                <div className=\"sort__popup\">\n                    <ul>\n                        {filters.map(item => {\n                            return (\n                                <li \n                                    className={cn({'active': item.type === activeItem})}\n                                    onClick={() => dispatch({type: HANDLE_ACTIVE_SORT, payload: item.type})} \n                                    key={item.name}\n                                >{item.name}</li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            }\n        </div>\n    )\n})\n\nexport default SortPopup\n","export default __webpack_public_path__ + \"static/media/sceletonPizzaCart.7b7bc6a1.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Categories from '../components/Categories'\nimport PizzaBlock from '../components/PizzaBlock'\nimport SortPopup from '../components/SortPopup'\n\nimport { getPizzasThunk } from '../redux/reducers/pizzasReducer'\nimport { AppStateType } from '../redux/store'\nimport { PizzaCardType } from '../types/types'\nimport sceletonCart from '../assets/img/sceletonPizzaCart.svg'\n\n\nconst Home: React.FC = () => {\n    const pizzas = useSelector((state: AppStateType) => state.pizzas)\n    const activeCategory = useSelector((state: AppStateType) => state.filters.activeCategory)\n    const activeSort = useSelector((state: AppStateType) => state.filters.activeSort)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(pizzas.items.length === 0) dispatch(getPizzasThunk)\n    }, [])\n\n    const filterCategories = (pizzas: PizzaCardType[]): PizzaCardType[] => {\n        if(!activeCategory) {\n            return pizzas\n        } else {\n            return pizzas.filter(item => item.category === activeCategory)\n        }\n    }\n\n    const filterSort = (pizzas: PizzaCardType[]): PizzaCardType[] => {\n        switch (activeSort) {\n            case 'popular':\n                return pizzas.sort((a, b) => a.rating < b.rating ? 1 : -1)\n            case 'price':\n                return pizzas.sort((a, b) => a.price > b.price ? 1 : -1)\n            case 'alphabet':\n                return pizzas.sort((a, b) => a.name > b.name ? 1 : -1)\n            default:\n                return pizzas\n        }\n    }\n\n    const filterPizzas = (pizzas: PizzaCardType[]) => {\n            const CurrentfilterCategories = filterCategories(pizzas)\n            const CurrentFilterSort = filterSort(CurrentfilterCategories)\n            return CurrentFilterSort.map(item => <PizzaBlock item={item} key={item.id} />)\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"content__top\">\n                <Categories />\n                <SortPopup />\n            </div>\n            <h2 className=\"content__title\">Все пиццы</h2>\n            <div className=\"content__items\">\n                {\n                !pizzas.isLoaded\n                    ? Array(10).fill(0).map((item, index) => <div key={`${item}_${index}`} className=\"pizza-block\"><img className=\"load-img\" src={sceletonCart} alt=\"loading\"/></div>)\n                    : filterPizzas(pizzas.items)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n"],"sourceRoot":""}