{"version":3,"sources":["redux/reducers/filtersReducer.ts","firebase/config.js","firebase/api.ts","redux/reducers/pizzasReducer.ts","assets/img/pizza-logo.svg","components/Button.tsx","components/Header.tsx","App.tsx","redux/reducers/typesReducer.ts","redux/store.ts","index.tsx"],"names":["HANDLE_ACTIVE_SORT","HANDLE_ACTIVE_CATEGORY","initialState","categories","sort","name","type","activeSort","activeCategory","filtersReducer","state","action","payload","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getPizzas","a","pizzasArr","pizzasRef","database","ref","once","snapshot","Object","entries","val","map","key","value","card","id","push","GET_PIZZAS","pizzasReducer","getPizzasThunk","dispatch","pizzas","Button","children","className","onClick","outline","classes","cn","Header","to","width","src","logoSvg","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Cart","React","lazy","Home","App","exact","path","component","fallback","types","sizes","reducer","combineReducers","filters","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"mOAEaA,EAAqB,qBACrBC,EAAyB,yBAEhCC,EAAiC,CACnCC,WAAY,CAAC,uCAAU,uFAAkB,iCAAS,uCAAU,oDAC5DC,KAAM,CACF,CAACC,KAAM,2EAAgBC,KAAM,WAC7B,CAACD,KAAM,2BAAQC,KAAM,SACrB,CAACD,KAAM,mDAAYC,KAAM,aAE7BC,WAAY,UACZC,eAAgB,MAKPC,EAAiB,WAA0D,IAAzDC,EAAwD,uDAAhDR,EAAcS,EAAkC,uCACnF,OAAOA,EAAOL,MACV,KAAKN,EACD,OAAO,2BACAU,GADP,IAEIH,WAAYI,EAAOC,UAE3B,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIF,eAAgBG,EAAOC,UAE/B,QACI,OAAOF,K,yJCnBnBG,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,wDACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,6CAIIR,QAAf,ECTaS,EAAS,uCAAG,8BAAAC,EAAA,6DACfC,EAA6B,GAC7BC,EAAYZ,EAASa,WAAWC,IAAI,WAFrB,SAGfF,EAAUG,KAAK,SAAS,SAAAC,GAC1BC,OAAOC,QAAQF,EAASG,OAAOC,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAC3CC,EAAS,2BACRD,GADQ,IAEXE,GAAIH,IAER,OAAOV,EAAUc,KAAKF,SATT,gCAYdZ,GAZc,2CAAH,qDCDTe,EAAa,aAEpBrC,EAAgC,GAIzBsC,EAAgB,WAA0D,IAAzD9B,EAAwD,uDAAhDR,EAAcS,EAAkC,uCAClF,OAAOA,EAAOL,MACV,KAAKiC,EACD,OAAO5B,EAAOC,QAClB,QACI,OAAOF,IAKN+B,EAAc,uCAAG,WAAOC,GAAP,eAAAnB,EAAA,sEACLD,IADK,OACpBqB,EADoB,OAE1BD,EAAS,CAAEpC,KAAMiC,EAAY3B,QAAS+B,IAFZ,2CAAH,uD,+HCnBZ,MAA0B,uC,iBC6B1BC,EAnBsB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAmBC,GAAyB,EAAlCC,QAAkC,EAAzBD,WAAWE,EAAc,EAAdA,QAE5DC,EAAUC,IACR,SACAJ,EACA,CAAE,kBAAmBE,IAI7B,OACI,wBACIF,UAAWG,EADf,SAIKJ,KCaEM,EA9BU,WACrB,OACI,qBAAKL,UAAU,SAAf,SACI,sBAAKA,UAAU,YAAf,UACI,eAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,eAAvB,UACI,qBAAKO,MAAM,KAAKC,IAAKC,EAASC,IAAI,eAClC,gCACI,6CACA,mNAGR,qBAAKV,UAAU,eAAf,SACI,cAAC,IAAD,CAAMM,GAAG,QAAT,SACI,eAAC,EAAD,CAAQN,UAAU,eAAlB,UACI,8CACA,qBAAKA,UAAU,sBACf,sBAAKO,MAAM,KAAKI,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,UACI,sBAAMC,EAAE,wLAAwLC,OAAO,QAAQC,YAAY,MAAMC,cAAc,QAAQC,eAAe,UACtQ,sBAAMJ,EAAE,yLAAyLC,OAAO,QAAQC,YAAY,MAAMC,cAAc,QAAQC,eAAe,UACvQ,sBAAMJ,EAAE,sWAAsWC,OAAO,QAAQC,YAAY,MAAMC,cAAc,QAAQC,eAAe,aAExb,kDCvBtBC,EAAOC,IAAMC,MAAK,kBAAM,gCACxBC,EAAOF,IAAMC,MAAK,kBAAM,sDAcfE,EAZO,WAClB,OACQ,sBAAKxB,UAAU,UAAf,UACI,cAAC,EAAD,IACJ,sBAAKA,UAAU,UAAf,UACI,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,IAAIC,UAAW,kBAAM,cAAC,WAAD,CAAUC,SAAU,KAApB,SAA0B,cAACL,EAAD,SACjE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,QAAQC,UAAW,kBAAM,cAAC,WAAD,CAAUC,SAAU,KAApB,SAA0B,cAACR,EAAD,gB,gCCX/EhE,EAA+B,CACjCyE,MAAO,CAAC,uCAAU,4EAClBC,MAAO,CAAC,GAAI,GAAI,K,QCGdC,EAAUC,0BAAgB,CAC5BnC,OAAQH,IACRmC,MDAwB,eAACjE,EAAD,uDAASR,EAAT,OAAyDQ,GCCjFqE,QAAStE,MAMAuE,EAAQC,sBAAYJ,EAASK,8BAAoBC,0BAAgBC,O,MCN9EC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAQC,SAAUC,eAAlB,SACI,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACI,cAAC,EAAD,UAIZU,SAASC,eAAe,W","file":"static/js/main.ad36f7d9.chunk.js","sourcesContent":["import { FiltersPizzaType } from '../../types/types'\n\nexport const HANDLE_ACTIVE_SORT = 'HANDLE_ACTIVE_SORT'\nexport const HANDLE_ACTIVE_CATEGORY = 'HANDLE_ACTIVE_CATEGORY'\n\nconst initialState: FiltersPizzaType = {\n    categories: ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые'],\n    sort: [\n        {name: 'популярности', type: 'popular'},\n        {name: 'цене', type: 'price'},\n        {name: 'алфавиту', type: 'alphabet'}\n    ],\n    activeSort: 'popular',\n    activeCategory: null\n}\n\ntype initialStateType = typeof initialState\n\nexport const filtersReducer = (state = initialState, action: any): initialStateType => {\n    switch(action.type) {\n        case HANDLE_ACTIVE_SORT: \n            return {\n                ...state,\n                activeSort: action.payload\n            }\n        case HANDLE_ACTIVE_CATEGORY:\n            return {\n                ...state,\n                activeCategory: action.payload\n            }\n        default:\n            return state\n    }\n}","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC4gXdnxi-xnkXv2KiAAo4xb4ilXvqHVq4\",\n    authDomain: \"react-pizza-7e056.firebaseapp.com\",\n    databaseURL: \"https://react-pizza-7e056-default-rtdb.firebaseio.com\",\n    projectId: \"react-pizza-7e056\",\n    storageBucket: \"react-pizza-7e056.appspot.com\",\n    messagingSenderId: \"14872864636\",\n    appId: \"1:14872864636:web:37063ab676ca31557ca6f9\"\n}\n\nfirebase.initializeApp(firebaseConfig)\nexport default firebase\n","import firebase from './config'\nimport { PizzaCardType } from '../types/types'\n\n\nexport const getPizzas = async (): Promise<PizzaCardType[]> => {\n    const pizzasArr: PizzaCardType[] = []\n    const pizzasRef = firebase.database().ref('pizzas/')\n    await pizzasRef.once('value', snapshot => {\n        Object.entries(snapshot.val()).map(([key, value]) => {\n            const card: any = {\n                ...value as {},\n                id: key\n            }\n            return pizzasArr.push(card)\n        })\n    })\n    return pizzasArr\n}","import { getPizzas } from '../../firebase/api'\nimport { PizzaCardType } from '../../types/types'\n\nexport const GET_PIZZAS = 'GET_PIZZAS'\n\nconst initialState: PizzaCardType[] = []\n\ntype initialStateType = typeof initialState\n\nexport const pizzasReducer = (state = initialState, action: any): initialStateType => {\n    switch(action.type) {\n        case GET_PIZZAS:\n            return action.payload\n        default:\n            return state\n    }\n}\n\n\nexport const getPizzasThunk = async (dispatch: any) => {\n    const pizzas = await getPizzas()\n    dispatch({ type: GET_PIZZAS, payload: pizzas })\n}","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from 'react'\nimport cn from 'classnames'\n\ntype ButtonType = {\n    children: React.ReactNode\n    onClick?: Function\n    className?: string\n    outline?: boolean\n}\n\nconst Button: React.FC<ButtonType> = ({ children, onClick, className, outline }) => {\n\n    const classes = cn(\n            'button', \n            className,\n            { 'button--outline': outline }\n        )\n\n\n    return (\n        <button\n            className={classes}\n            // onClick={onClick}\n        >\n            {children}\n        </button>\n    )\n}\n\nexport default Button\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport logoSvg from '../assets/img/pizza-logo.svg'\nimport Button from './Button'\n\n\nconst Header: React.FC = () => {\n    return (\n        <div className=\"header\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"header__logo\">\n                    <img width=\"38\" src={logoSvg} alt=\"Pizza logo\" />\n                    <div>\n                        <h1>React Pizza</h1>\n                        <p>самая вкусная пицца во вселенной</p>\n                    </div>\n                </Link>\n                <div className=\"header__cart\">\n                    <Link to=\"/cart\">\n                        <Button className=\"button--cart\">\n                            <span>520 ₽</span>\n                            <div className=\"button__delimiter\"></div>\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\n                                <path d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                <path d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                <path d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\" stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                            </svg>\n                            <span>3</span>\n                        </Button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { Suspense } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport Header from './components/Header'\n\nconst Cart = React.lazy(() => import('./pages/Cart'))\nconst Home = React.lazy(() => import('./pages/Home'))\n\nconst App: React.FC = () => {\n    return (\n            <div className=\"wrapper\">\n                <Header />\n            <div className=\"content\">\n                <Route exact path=\"/\" component={() => <Suspense fallback={null}><Home /></Suspense>}/>\n                <Route exact path=\"/cart\" component={() => <Suspense fallback={null}><Cart /></Suspense>}/>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import { TypesPizzaType } from '../../types/types'\n\n\nconst initialState: TypesPizzaType = {\n    types: ['тонкое', 'традиционное'],\n    sizes: [26, 30, 40]\n}\n\ntype initialStateType = typeof initialState\n\nexport const typesReducer = (state = initialState, action: any): initialStateType => state","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nimport { pizzasReducer } from './reducers/pizzasReducer'\nimport { typesReducer } from './reducers/typesReducer'\nimport { filtersReducer } from './reducers/filtersReducer'\n\nconst reducer = combineReducers({\n    pizzas: pizzasReducer,\n    types: typesReducer,\n    filters: filtersReducer\n})\n\ntype ReducerType = typeof reducer\nexport type AppStateType = ReturnType<ReducerType>\n\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './App'\nimport { store } from './redux/store'\n\nimport './scss/app.scss'\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}