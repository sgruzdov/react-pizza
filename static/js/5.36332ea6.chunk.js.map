{"version":3,"sources":["components/Categories.tsx","assets/img/loadingPizzaCart.svg","components/LazyLoadImg.tsx","components/PizzaBlock.tsx","components/SortPopup.tsx","assets/img/sceletonPizzaCart.svg","pages/Home.tsx"],"names":["Categories","React","memo","filters","useSelector","state","categories","activeItem","activeCategory","dispatch","useDispatch","className","cn","onClick","handleActiveCategoryThunk","map","item","index","LazyLoadImg","imageUrl","name","useState","onload","setOnload","onLoad","src","loadImg","alt","title","PizzaBlock","onClickAddPizza","types","activeType","setActiveType","sizes","activeSize","setActiveSize","cartItems","cart","items","id","currentCartItems","flat","reduce","sum","obj","amount","type","includes","size","price","Button","onClickAdd","outline","width","height","viewBox","fill","xmlns","d","length","SortPopup","visiblePopup","setVisiblePopup","sortRef","useRef","sort","activeSort","handleOutsideClick","e","path","composedPath","current","useEffect","document","body","addEventListener","removeEventListener","ref","prev","find","HANDLE_ACTIVE_SORT","payload","Home","pizzas","getPizzasThunk","isLoaded","a","b","rating","filterSort","ADD_PIZZA_CART","addPizzaToCart","filterPizzas","Array","sceletonCart"],"mappings":"4LAiCeA,EA1BcC,IAAMC,MAAK,WACpC,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAyBA,EAAMF,QAAQG,cAC7DC,EAAaH,aAAY,SAACC,GAAD,OAAyBA,EAAMF,QAAQK,kBAChEC,EAAWC,cAEjB,OACI,qBAAKC,UAAU,aAAf,SACI,+BACI,oBACIA,UAAWC,IAAG,CAAC,OAAyB,OAAfL,IACzBM,QAAS,kBAAMJ,EAASK,YAA0B,QAFtD,gCAICX,EAAQY,KAAI,SAACC,EAAMC,GAChB,OACI,oBACIN,UAAWC,IAAG,CAAC,OAAUL,IAAeU,EAAQ,IAChDJ,QAAS,kBAAMJ,EAASK,YAA0BG,EAAQ,KAF9D,SAIED,GADOA,c,wBCxBlB,MAA0B,6CCiB1BE,EAP0BjB,IAAMC,MAAK,YAAyB,IAAtBiB,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAAW,EAC5CC,oBAAS,GADmC,mBACjEC,EADiE,KACzDC,EADyD,KAIxE,OAAO,cAAC,oBAAD,UAAmB,qBAAKZ,UAAU,qBAAqBa,OAFxC,kBAAMD,GAAU,IAE+CE,IAAMH,EAAoBI,EAAXP,EAAoBQ,IAAI,QAAQC,MAAOR,SCgEhIS,EA/D8B5B,IAAMC,MAAK,YAAgC,IAA7Bc,EAA4B,EAA5BA,KAAMc,EAAsB,EAAtBA,gBAAsB,EAC/CT,mBAASL,EAAKe,MAAM,IAD2B,mBAC5EC,EAD4E,KAChEC,EADgE,OAE/CZ,mBAASL,EAAKkB,MAAM,IAF2B,mBAE5EC,EAF4E,KAEhEC,EAFgE,KAG7EL,EAAQ3B,aAAY,SAACC,GAAD,OAAyBA,EAAM0B,SACnDM,EAAYjC,aAAY,SAACC,GAAD,OAAyBA,EAAMiC,KAAKC,MAAMvB,EAAKwB,OACvEC,EAAmBJ,GAAaA,EAAUK,OAAOC,QAAO,SAACC,EAAKC,GAAN,OAAcA,EAAIC,OAASF,IAAK,GAc9F,OACI,sBAAKjC,UAAU,cAAf,UACI,cAAC,EAAD,CAAaQ,SAAUH,EAAKG,SAAUC,KAAMJ,EAAKI,OACjD,oBAAIT,UAAU,qBAAd,SAAoCK,EAAKI,OACzC,sBAAKT,UAAU,wBAAf,UACI,6BACKoB,EAAMA,MAAMhB,KAAI,SAACgC,EAAM9B,GACpB,OAAO,oBAEHJ,QAAS,kBAAMoB,EAAchB,IAC7BN,UAAWC,IAAG,CACV,OAAUoB,IAAef,EACzB,UAAaD,EAAKe,MAAMiB,SAAS/B,KALlC,SAOD8B,GANG9B,QASjB,6BACKc,EAAMG,MAAMnB,KAAI,SAACkC,EAAMhC,GACpB,OAAO,qBAEHJ,QAAS,kBAAMuB,EAAca,IAC7BtC,UAAWC,IAAG,CACV,OAAUuB,IAAec,EACzB,UAAajC,EAAKkB,MAAMc,SAASC,KALlC,UAODA,EAPC,mBACEhC,WAUrB,sBAAKN,UAAU,sBAAf,UACI,sBAAKA,UAAU,qBAAf,0BAAwCK,EAAKkC,MAA7C,aACA,eAACC,EAAA,EAAD,CAAQxC,UAAU,cAAcyC,WA5CzB,WACftB,EAAgB,CACZU,GAAIxB,EAAKwB,GACTpB,KAAMJ,EAAKI,KACXD,SAAUH,EAAKG,SACf+B,MAAOlC,EAAKkC,MACZD,KAAMd,EACNY,KAAMhB,EAAMA,MAAMC,GAClBc,OAAQ,KAoCoDO,SAAO,EAA/D,UACI,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SACI,sBAAMC,EAAE,2QAA2QF,KAAK,YAE5R,oFACCpB,GAAaA,EAAUuB,OAAS,GAAK,4BAAInB,gB,QCb/CoB,EAlDa5D,IAAMC,MAAK,WAAO,IAAD,EACDmB,oBAAS,GADR,mBAClCyC,EADkC,KACpBC,EADoB,KAEnCC,EAAUC,iBAAuB,MACjC9D,EAAUC,aAAY,SAACC,GAAD,OAAyBA,EAAMF,QAAQ+D,QAC7D3D,EAAaH,aAAY,SAACC,GAAD,OAAyBA,EAAMF,QAAQgE,cAChE1D,EAAWC,cAEX0D,EAAqB,SAACC,IACXA,EAAEC,MAASD,EAAEE,cAAgBF,EAAEE,gBACnCvB,SAASgB,EAAQQ,UACtBT,GAAgB,IAIxBU,qBAAU,WAEN,OADAC,SAASC,KAAKC,iBAAiB,QAASR,GACjC,kBAAMM,SAASC,KAAKE,oBAAoB,QAAST,MACzD,IAMH,OACI,sBAAKzD,UAAU,OAAOmE,IAAKd,EAA3B,UACI,sBAAKrD,UAAU,cAAf,UACI,qBAAKA,UAAWC,IAAG,CAAC,QAAWkD,IAAgBR,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,6BAA1G,SACI,sBAAMC,EAAE,4WAA4WF,KAAK,cAE7X,2GACA,sBAAM5C,QAXS,WACvBkD,GAAgB,SAAAgB,GAAI,OAAKA,MAUjB,SAAoC5E,EAAQ6E,MAAK,SAAAhE,GAAI,OAAIA,EAAK+B,OAASxC,GAAcS,EAAKI,QAAMA,UAEnG0C,GACD,qBAAKnD,UAAU,cAAf,SACI,6BACKR,EAAQY,KAAI,SAAAC,GACT,OACI,oBACIL,UAAWC,IAAG,CAAC,OAAUI,EAAK+B,OAASxC,IACvCM,QAAS,kBAAMJ,EAAS,CAACsC,KAAMkC,IAAoBC,QAASlE,EAAK+B,QAFrE,SAIE/B,EAAKI,MADEJ,EAAKI,mBChD3B,MAA0B,8C,QCmE1B+D,UApDQ,WACnB,IAAMC,EAAShF,aAAY,SAACC,GAAD,OAAyBA,EAAM+E,UACpDjB,EAAa/D,aAAY,SAACC,GAAD,OAAyBA,EAAMF,QAAQgE,cAChE1D,EAAWC,cAEjB+D,qBAAU,WACqB,IAAxBW,EAAO7C,MAAMqB,QAAcnD,EAAS4E,OACxC,IA2BH,OACI,sBAAK1E,UAAU,YAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,oBAAIA,UAAU,iBAAd,+DACA,qBAAKA,UAAU,iBAAf,SAEKyE,EAAOE,SAjBC,SAACF,GAEd,OAfW,SAACA,GAChB,OAAQjB,GACJ,IAAK,UACD,OAAO,YAAIiB,GAAQlB,MAAK,SAACqB,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,OAAS,GAAK,KACjE,IAAK,QACD,OAAO,YAAIL,GAAQlB,MAAK,SAACqB,EAAGC,GAAJ,OAAUD,EAAErC,MAAQsC,EAAEtC,MAAQ,GAAK,KAC/D,IAAK,WACD,OAAO,YAAIkC,GAAQlB,MAAK,SAACqB,EAAGC,GAAJ,OAAUD,EAAEnE,KAAOoE,EAAEpE,KAAO,GAAK,KAC7D,QACI,OAAOgE,GAKeM,CAAWN,GACZrE,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CACGc,gBAAiB,SAACe,GAAD,OApB1C,SAACA,GACpBpC,EAAS,CAACsC,KAAM4C,IAAgBT,QAASrC,IAmBwC+C,CAAe/C,IACpD7B,KAAMA,GACDA,EAAKwB,OAcxCqD,CAAaT,EAAO7C,OADpBuD,MAAM,GAAGrC,KAAK,GAAG1C,KAAI,SAACC,EAAMC,GAAP,OAAiB,qBAA8BN,UAAU,cAAxC,SAAsD,qBAAKA,UAAU,WAAWc,IAAKsE,EAAcpE,IAAI,aAAvG,UAAaX,EAAb,YAAqBC","file":"static/js/5.36332ea6.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport cn from 'classnames'\n\nimport { AppStateType } from '../redux/store'\nimport { handleActiveCategoryThunk } from '../redux/reducers/pizzasReducer'\n\nconst Categories: React.FC = React.memo(() => {\n    const filters = useSelector((state: AppStateType) => state.filters.categories)\n    const activeItem = useSelector((state: AppStateType) => state.filters.activeCategory)\n    const dispatch = useDispatch()\n\n    return (\n        <div className=\"categories\">\n            <ul>\n                <li \n                    className={cn({'active': activeItem === null})}\n                    onClick={() => dispatch(handleActiveCategoryThunk(null))}\n                    >Все</li>\n                {filters.map((item, index) => {\n                    return (\n                        <li \n                            className={cn({'active': activeItem === index + 1})}\n                            onClick={() => dispatch(handleActiveCategoryThunk(index + 1))} \n                            key={item}\n                        >{item}</li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n})\n\nexport default Categories","export default __webpack_public_path__ + \"static/media/loadingPizzaCart.989b4d97.svg\";","import React, { useState } from 'react'\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\n\nimport loadImg from '../assets/img/loadingPizzaCart.svg'\n\ntype PropsType = {\n    imageUrl: string\n    name: string\n}\n\nconst LazyLoadImg: React.FC<PropsType> = React.memo(({ imageUrl, name }) => {\n    const [onload, setOnload] = useState(true)\n    const handleLoading = () => setOnload(false)\n\n    return <LazyLoadComponent><img className=\"pizza-block__image\" onLoad={handleLoading} src={!onload ? imageUrl : loadImg} alt=\"Pizza\" title={name} /></LazyLoadComponent>\n})\n\nexport default LazyLoadImg\n","import React, { useState } from 'react'\nimport cn from 'classnames'\nimport { useSelector } from 'react-redux'\n\nimport { PizzaCardType, PizzaCart } from '../types/types'\nimport { AppStateType } from '../redux/store'\n\nimport Button from './Button'\nimport LazyLoadImg from './LazyLoadImg'\n\ntype PizzaBlockType = {\n    item: PizzaCardType\n    onClickAddPizza: (obj: PizzaCart) => void,\n}\n\nconst PizzaBlock: React.FC<PizzaBlockType> = React.memo(({ item, onClickAddPizza }) => {\n    const [activeType, setActiveType] = useState(item.types[0])\n    const [activeSize, setActiveSize] = useState(item.sizes[0])\n    const types = useSelector((state: AppStateType) => state.types)\n    const cartItems = useSelector((state: AppStateType) => state.cart.items[item.id])\n    const currentCartItems = cartItems && cartItems.flat().reduce((sum, obj) => obj.amount + sum, 0)\n\n    const onAddPizza = () => {\n        onClickAddPizza({ \n            id: item.id, \n            name: item.name, \n            imageUrl: item.imageUrl, \n            price: item.price,\n            size: activeSize,\n            type: types.types[activeType],\n            amount: 1\n        })\n    }\n\n    return (\n        <div className=\"pizza-block\">\n            <LazyLoadImg imageUrl={item.imageUrl} name={item.name}/>\n            <h4 className=\"pizza-block__title\">{item.name}</h4>\n            <div className=\"pizza-block__selector\">\n                <ul>\n                    {types.types.map((type, index) => {\n                        return <li \n                            key={index}\n                            onClick={() => setActiveType(index)}\n                            className={cn({\n                                'active': activeType === index,\n                                'disabled': !item.types.includes(index)\n                            })}\n                            >{type}</li>\n                    })}\n                </ul>\n                <ul>\n                    {types.sizes.map((size, index) => {\n                        return <li \n                            key={index}\n                            onClick={() => setActiveSize(size)}\n                            className={cn({\n                                'active': activeSize === size,\n                                'disabled': !item.sizes.includes(size)\n                            })}\n                            >{size} см.</li>\n                    })}\n                </ul>\n            </div>\n            <div className=\"pizza-block__bottom\">\n                <div className=\"pizza-block__price\">от {item.price} ₽</div>\n                <Button className=\"button--add\" onClickAdd={onAddPizza} outline>\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\" fill=\"white\" />\n                    </svg>\n                    <span>Добавить</span>\n                    {cartItems && cartItems.length > 0 && <i>{currentCartItems}</i>}\n                </Button>\n            </div>\n        </div>\n    )\n})\n\nexport default PizzaBlock\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport cn from 'classnames'\n\nimport { HANDLE_ACTIVE_SORT } from '../redux/reducers/filtersReducer'\nimport { AppStateType } from '../redux/store'\n\nconst SortPopup: React.FC = React.memo(() => {\n    const [visiblePopup, setVisiblePopup] = useState(false)\n    const sortRef = useRef<HTMLDivElement>(null)\n    const filters = useSelector((state: AppStateType) => state.filters.sort)\n    const activeItem = useSelector((state: AppStateType) => state.filters.activeSort)\n    const dispatch = useDispatch()\n\n    const handleOutsideClick = (e: any): void => {\n        const path = e.path || (e.composedPath && e.composedPath())\n        if(!path.includes(sortRef.current)) {\n            setVisiblePopup(false)\n        }\n    }\n\n    useEffect(() => {\n        document.body.addEventListener('click', handleOutsideClick)\n        return () => document.body.removeEventListener('click', handleOutsideClick)\n    }, [])\n\n    const toggleVisiblePopup = (): void => {\n        setVisiblePopup(prev => !prev)\n    }\n\n    return (\n        <div className=\"sort\" ref={sortRef}>\n            <div className=\"sort__label\">\n                <svg className={cn({'rotated': visiblePopup})} width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\" fill=\"#2C2C2C\" />\n                </svg>\n                <b>Сортировка по:</b>\n                <span onClick={toggleVisiblePopup}>{filters.find(item => item.type === activeItem && item.name).name}</span>\n            </div>\n            {visiblePopup && \n            <div className=\"sort__popup\">\n                <ul>\n                    {filters.map(item => {\n                        return (\n                            <li \n                                className={cn({'active': item.type === activeItem})}\n                                onClick={() => dispatch({type: HANDLE_ACTIVE_SORT, payload: item.type})} \n                                key={item.name}\n                            >{item.name}</li>\n                        )\n                    })}\n                </ul>\n            </div>}\n        </div>\n    )\n})\n\nexport default SortPopup\n","export default __webpack_public_path__ + \"static/media/sceletonPizzaCart.52180591.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Categories from '../components/Categories'\nimport PizzaBlock from '../components/PizzaBlock'\nimport SortPopup from '../components/SortPopup'\n\nimport { getPizzasThunk } from '../redux/reducers/pizzasReducer'\nimport { AppStateType } from '../redux/store'\nimport { PizzaCardType, PizzaCart } from '../types/types'\nimport sceletonCart from '../assets/img/sceletonPizzaCart.svg'\nimport { ADD_PIZZA_CART } from '../redux/reducers/cartReducer'\n\n\nconst Home: React.FC = () => {\n    const pizzas = useSelector((state: AppStateType) => state.pizzas)\n    const activeSort = useSelector((state: AppStateType) => state.filters.activeSort)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(pizzas.items.length === 0) dispatch(getPizzasThunk)\n    }, [])\n\n    const addPizzaToCart = (obj: PizzaCart) => {\n        dispatch({type: ADD_PIZZA_CART, payload: obj})\n    }\n\n    const filterSort = (pizzas: PizzaCardType[]): PizzaCardType[] => {\n        switch (activeSort) {\n            case 'popular':\n                return [...pizzas].sort((a, b) => a.rating < b.rating ? 1 : -1)\n            case 'price':\n                return [...pizzas].sort((a, b) => a.price > b.price ? 1 : -1)\n            case 'alphabet':\n                return [...pizzas].sort((a, b) => a.name > b.name ? 1 : -1)\n            default:\n                return pizzas\n        }\n    }\n\n    const filterPizzas = (pizzas: PizzaCardType[]) => {\n            const CurrentFilterSort = filterSort(pizzas)\n            return CurrentFilterSort.map(item => <PizzaBlock \n                                                    onClickAddPizza={(obj: PizzaCart) => addPizzaToCart(obj)} \n                                                    item={item} \n                                                    key={item.id} />)\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"content__top\">\n                <Categories />\n                <SortPopup />\n            </div>\n            <h2 className=\"content__title\">Все пиццы</h2>\n            <div className=\"content__items\">\n                {\n                !pizzas.isLoaded\n                    ? Array(4).fill(0).map((item, index) => <div key={`${item}_${index}`} className=\"pizza-block\"><img className=\"load-img\" src={sceletonCart} alt=\"loading\"/></div>)\n                    : filterPizzas(pizzas.items)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n"],"sourceRoot":""}