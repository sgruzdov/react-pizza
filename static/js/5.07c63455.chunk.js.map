{"version":3,"sources":["components/Categories.tsx","assets/img/loadingPizzaCart.svg","components/PizzaBlock.tsx","components/SortPopup.tsx","assets/img/sceletonPizzaCart.svg","pages/Home.tsx"],"names":["Categories","React","memo","filters","useSelector","state","categories","activeItem","activeCategory","dispatch","useDispatch","className","cn","onClick","type","HANDLE_ACTIVE_CATEGORY","payload","map","item","index","PizzaBlock","onClickAddPizza","addedCount","useState","onload","setOnload","types","activeType","setActiveType","sizes","activeSize","setActiveSize","onLoad","src","loadImg","imageUrl","alt","title","name","includes","size","price","Button","onClickAdd","id","outline","width","height","viewBox","fill","xmlns","d","SortPopup","visiblePopup","setVisiblePopup","sortRef","useRef","sort","activeSort","handleOutsideClick","e","path","composedPath","current","useEffect","document","body","addEventListener","removeEventListener","ref","prev","find","HANDLE_ACTIVE_SORT","Home","pizzas","cartItems","cart","items","length","getPizzasThunk","isLoaded","a","b","rating","filterSort","filter","category","filterCategories","obj","ADD_PIZZA_CART","addPizzaToCart","filterPizzas","Array","sceletonCart"],"mappings":"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","file":"static/js/5.07c63455.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport cn from 'classnames'\n\nimport { HANDLE_ACTIVE_CATEGORY } from '../redux/reducers/filtersReducer'\nimport { AppStateType } from '../redux/store'\n\nconst Categories: React.FC = React.memo(() => {\n    const filters = useSelector((state: AppStateType) => state.filters.categories)\n    const activeItem = useSelector((state: AppStateType) => state.filters.activeCategory)\n    const dispatch = useDispatch()\n\n    return (\n        <div className=\"categories\">\n            <ul>\n                <li \n                    className={cn({'active': activeItem === null})}\n                    onClick={() => dispatch({type: HANDLE_ACTIVE_CATEGORY, payload: null})}\n                    >Все</li>\n                {filters.map((item, index) => {\n                    return (\n                        <li \n                            className={cn({'active': activeItem === index + 1})}\n                            onClick={() => dispatch({type: HANDLE_ACTIVE_CATEGORY, payload: index + 1})} \n                            key={item}\n                        >{item}</li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n})\n\nexport default Categories","export default __webpack_public_path__ + \"static/media/loadingPizzaCart.989b4d97.svg\";","import React, { useState } from 'react'\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\nimport cn from 'classnames'\nimport { useSelector } from 'react-redux'\n\nimport { PizzaCardType, PizzaCart } from '../types/types'\nimport { AppStateType } from '../redux/store'\n\nimport loadImg from '../assets/img/loadingPizzaCart.svg'\nimport Button from './Button'\n\ntype PizzaBlockType = {\n    item: PizzaCardType\n    onClickAddPizza: (obj: PizzaCart) => void,\n    addedCount: number\n}\n\nconst PizzaBlock: React.FC<PizzaBlockType> = ({ item, onClickAddPizza, addedCount }) => {\n    const [onload, setOnload] = useState(true)\n    const [activeType, setActiveType] = useState(item.types[0])\n    const [activeSize, setActiveSize] = useState(item.sizes[0])\n    const types = useSelector((state: AppStateType) => state.types)\n\n    const handleLoading = () => setOnload(false)\n    const onAddPizza = () => {\n        onClickAddPizza({ \n            id: item.id, \n            name: item.name, \n            imageUrl: item.imageUrl, \n            price: item.price,\n            size: activeSize,\n            type: types.types[activeType]\n        })\n    }\n\n    return (\n        <div className=\"pizza-block\">\n            <LazyLoadComponent><img className=\"pizza-block__image\" onLoad={handleLoading} src={!onload ? item.imageUrl : loadImg} alt=\"Pizza\" title={item.name} /></LazyLoadComponent>\n            <h4 className=\"pizza-block__title\">{item.name}</h4>\n            <div className=\"pizza-block__selector\">\n                <ul>\n                    {types.types.map((type, index) => {\n                        return <li \n                            key={index}\n                            onClick={() => setActiveType(index)}\n                            className={cn({\n                                'active': activeType === index,\n                                'disabled': !item.types.includes(index)\n                            })}\n                            >{type}</li>\n                    })}\n                </ul>\n                <ul>\n                    {types.sizes.map((size, index) => {\n                        return <li \n                            key={index}\n                            onClick={() => setActiveSize(size)}\n                            className={cn({\n                                'active': activeSize === size,\n                                'disabled': !item.sizes.includes(size)\n                            })}\n                            >{size} см.</li>\n                    })}\n                </ul>\n            </div>\n            <div className=\"pizza-block__bottom\">\n                <div className=\"pizza-block__price\">от {item.price} ₽</div>\n                <Button className=\"button--add\" onClickAdd={onAddPizza} outline>\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\" fill=\"white\" />\n                    </svg>\n                    <span>Добавить</span>\n                    {addedCount && <i>{addedCount}</i>}\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default PizzaBlock\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport cn from 'classnames'\n\nimport { HANDLE_ACTIVE_SORT } from '../redux/reducers/filtersReducer'\nimport { AppStateType } from '../redux/store'\n\nconst SortPopup: React.FC = React.memo(() => {\n    const [visiblePopup, setVisiblePopup] = useState(false)\n    const sortRef = useRef<HTMLInputElement>(null)\n    const filters = useSelector((state: AppStateType) => state.filters.sort)\n    const activeItem = useSelector((state: AppStateType) => state.filters.activeSort)\n    const dispatch = useDispatch()\n\n    const handleOutsideClick = (e: any): void => {\n        const path = e.path || (e.composedPath && e.composedPath())\n        if(!path.includes(sortRef.current)) {\n            setVisiblePopup(false)\n        }\n    }\n\n    useEffect(() => {\n        document.body.addEventListener('click', handleOutsideClick)\n        return () => document.body.removeEventListener('click', handleOutsideClick)\n    }, [])\n\n    const toggleVisiblePopup = (): void => {\n        setVisiblePopup(prev => !prev)\n    }\n\n    return (\n        <div className=\"sort\" ref={sortRef}>\n            <div className=\"sort__label\">\n                <svg className={cn({'rotated': visiblePopup})} width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\" fill=\"#2C2C2C\" />\n                </svg>\n                <b>Сортировка по:</b>\n                <span onClick={toggleVisiblePopup}>{filters.find(item => item.type === activeItem && item.name).name}</span>\n            </div>\n            {\n                visiblePopup && \n                <div className=\"sort__popup\">\n                    <ul>\n                        {filters.map(item => {\n                            return (\n                                <li \n                                    className={cn({'active': item.type === activeItem})}\n                                    onClick={() => dispatch({type: HANDLE_ACTIVE_SORT, payload: item.type})} \n                                    key={item.name}\n                                >{item.name}</li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            }\n        </div>\n    )\n})\n\nexport default SortPopup\n","export default __webpack_public_path__ + \"static/media/sceletonPizzaCart.7b7bc6a1.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Categories from '../components/Categories'\nimport PizzaBlock from '../components/PizzaBlock'\nimport SortPopup from '../components/SortPopup'\n\nimport { getPizzasThunk } from '../redux/reducers/pizzasReducer'\nimport { AppStateType } from '../redux/store'\nimport { PizzaCardType, PizzaCart } from '../types/types'\nimport sceletonCart from '../assets/img/sceletonPizzaCart.svg'\nimport { ADD_PIZZA_CART } from '../redux/reducers/cartReducer'\n\n\nconst Home: React.FC = () => {\n    const pizzas = useSelector((state: AppStateType) => state.pizzas)\n    const cartItems = useSelector((state: AppStateType) => state.cart.items)\n    const activeCategory = useSelector((state: AppStateType) => state.filters.activeCategory)\n    const activeSort = useSelector((state: AppStateType) => state.filters.activeSort)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(pizzas.items.length === 0) dispatch(getPizzasThunk)\n    }, [])\n\n    const addPizzaToCart = (obj: PizzaCart) => {\n        dispatch({type: ADD_PIZZA_CART, payload: obj})\n    }\n\n    const filterCategories = (pizzas: PizzaCardType[]): PizzaCardType[] => {\n        if(!activeCategory) {\n            return pizzas\n        } else {\n            return pizzas.filter(item => item.category === activeCategory)\n        }\n    }\n\n    const filterSort = (pizzas: PizzaCardType[]): PizzaCardType[] => {\n        switch (activeSort) {\n            case 'popular':\n                return pizzas.sort((a, b) => a.rating < b.rating ? 1 : -1)\n            case 'price':\n                return pizzas.sort((a, b) => a.price > b.price ? 1 : -1)\n            case 'alphabet':\n                return pizzas.sort((a, b) => a.name > b.name ? 1 : -1)\n            default:\n                return pizzas\n        }\n    }\n\n    const filterPizzas = (pizzas: PizzaCardType[]) => {\n            const CurrentfilterCategories = filterCategories(pizzas)\n            const CurrentFilterSort = filterSort(CurrentfilterCategories)\n            return CurrentFilterSort.map(item => <PizzaBlock onClickAddPizza={(obj: PizzaCart) => addPizzaToCart(obj)} addedCount={cartItems[item.id] && cartItems[item.id].items.length} item={item} key={item.id} />)\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"content__top\">\n                <Categories />\n                <SortPopup />\n            </div>\n            <h2 className=\"content__title\">Все пиццы</h2>\n            <div className=\"content__items\">\n                {\n                !pizzas.isLoaded\n                    ? Array(10).fill(0).map((item, index) => <div key={`${item}_${index}`} className=\"pizza-block\"><img className=\"load-img\" src={sceletonCart} alt=\"loading\"/></div>)\n                    : filterPizzas(pizzas.items)\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n"],"sourceRoot":""}